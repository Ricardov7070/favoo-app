services:

  laravel-1:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel-1
    restart: always
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/var/www/laravel
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_app

  laravel-2:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel-2
    restart: always
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/var/www/laravel
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_app

  laravel-3:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel-3
    restart: always
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/var/www/laravel
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_app

  laravel-4:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel-4
    restart: always
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/var/www/laravel
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_app

  laravel-5:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel-5
    restart: always
    tty: true
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/var/www/laravel
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_app

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel_app

  redis:
    image: redis:alpine
    container_name: redis-container
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - laravel_app

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-container
    restart: always
    networks:
      - laravel_app

  nginx:
    image: nginx:alpine
    container_name: nginx-container
    restart: always
    volumes:
      - .:/var/www/laravel
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - laravel-1
      - laravel-2
      - laravel-3
      - laravel-4
      - laravel-5
    networks:
      - laravel_app

networks:
  laravel_app:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
